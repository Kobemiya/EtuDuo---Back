---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/accessories":
    get:
      summary: list accessories
      tags:
      - Accessories
      description: List all accessories in the game
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/accessory"
        '401':
          description: Unauthorized
    post:
      summary: create accessory
      tags:
      - Accessories
      description: Create a new accessory (needs perms)
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/accessory"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Accessory already exists
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/propertiesSchemas/accessoryProperties"
              required:
              - name
              - image_path
              - body_part
        description: Accessory infos
  "/accessories/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: integer
    get:
      summary: show accessory
      tags:
      - Accessories
      description: Get infos on a specified accessory
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/accessory"
        '401':
          description: Unauthorized
        '404':
          description: Not found
    patch:
      summary: update accessory
      tags:
      - Accessories
      description: Update infos of a specified accessory (needs perms)
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/accessory"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/accessoryProperties"
        description: Accessory infos
    put:
      summary: update accessory
      tags:
      - Accessories
      description: Update infos of a specified accessory (needs perms)
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/accessory"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/accessoryProperties"
        description: Accessory infos
    delete:
      summary: delete accessory
      tags:
      - Accessories
      description: Delete a specified accessory (needs perms)
      responses:
        '204':
          description: Deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
  "/achievements":
    get:
      summary: list achievements
      tags:
      - Achievements
      description: List all achievements in the game
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/achievement"
        '401':
          description: Unauthorized
    post:
      summary: create achievement
      tags:
      - Achievements
      description: Create a new achievement
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/achievement"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/propertiesSchemas/achievementProperties"
              required:
              - image_path
        description: Achievement infos
  "/achievements/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: integer
    get:
      summary: show achievement
      tags:
      - Achievements
      description: Get infos on a specified achievement
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/achievement"
        '401':
          description: Unauthorized
        '404':
          description: Not found
    patch:
      summary: update achievement
      tags:
      - Achievements
      description: Update infos of a specified achievement
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/achievement"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/achievementProperties"
        description: Achievement infos
    put:
      summary: update achievement
      tags:
      - Achievements
      description: Update infos of a specified achievement
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/achievement"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/achievementProperties"
        description: Achievement infos
    delete:
      summary: delete achievement
      tags:
      - Achievements
      description: Delete a specified achievement
      responses:
        '204':
          description: Deleted
        '401':
          description: Unauthorized
        '404':
          description: Not found
  "/achievements/{achievement_id}/grant":
    parameters:
    - name: achievement_id
      in: path
      description: id
      required: true
      schema:
        type: integer
    put:
      summary: grant achievement
      tags:
      - Achievements
      description: Grant the specified achievement to the user
      responses:
        '204':
          description: Successful
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '422':
          description: Unprocessable Entity
    post:
      summary: grant achievement
      tags:
      - Achievements
      description: Grant the specified achievement to the user
      responses:
        '204':
          description: Successful
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '422':
          description: Unprocessable Entity
  "/user/achievements":
    get:
      summary: list user's achievements
      tags:
      - Achievements
      description: List all achievements obtained by the user
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/achievement"
        '401':
          description: Unauthorized
  "/companion":
    get:
      summary: show companion
      tags:
      - Companion
      description: List all companion's accessories and its caracteristics
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/companion"
        '401':
          description: Unauthorized
    put:
      summary: update companion
      tags:
      - Companion
      description: Modify companion's attributes
      parameters: []
      responses:
        '204':
          description: Created or Updated
        '400':
          description: Bad Request
        '401':
          description: Forbidden
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/companionProperties"
        description: Companion's appearance
  "/companion/{accessory_id}":
    parameters:
    - name: accessory_id
      in: path
      description: accessory_id
      required: true
      schema:
        type: string
    put:
      summary: Equip accessory
      tags:
      - Companion
      description: Add accessory on companion
      responses:
        '204':
          description: Equipped
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '409':
          description: Conflict
    delete:
      summary: Unequip accessory
      tags:
      - Companion
      description: Remove accessory from companion
      responses:
        '204':
          description: Unequipped
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '409':
          description: Conflict
  "/inventory":
    get:
      summary: Show inventory
      tags:
      - Inventory
      description: Display the user's inventory, which contains the accessories obtained
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/accessory"
        '401':
          description: Unauthorized
  "/inventory/{accessory_id}":
    parameters:
    - name: accessory_id
      in: path
      description: accessory_id
      required: true
      schema:
        type: string
    put:
      summary: Add accessory in inventory
      tags:
      - Inventory
      description: Add a specified accessory in the user's inventory
      responses:
        '204':
          description: Added
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '409':
          description: Conflict
    delete:
      summary: Remove accessory from inventory
      tags:
      - Inventory
      description: Remove a specified accessory from the user's inventory
      responses:
        '204':
          description: Removed
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '409':
          description: Conflict
        '422':
          description: Failed to update companion
  "/profile":
    get:
      summary: Show profile
      tags:
      - Profile
      description: Show user's current profile informations
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/profile"
        '401':
          description: Unauthorized
    put:
      summary: Update profile
      tags:
      - Profile
      description: Update or create the user's profile
      parameters: []
      responses:
        '204':
          description: Created or Updated
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/propertiesSchemas/profileProperties"
              required:
              - occupation
              - prod_period
              - start_work
              - end_work
        description: Profile infos
  "/rooms":
    get:
      summary: list rooms
      tags:
      - Rooms
      description: List all rooms
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/room"
        '401':
          description: Unauthorized
    post:
      summary: create room
      tags:
      - Rooms
      description: Create a room with optional password
      parameters: []
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/room"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/propertiesSchemas/roomProperties"
              - "$ref": "#/components/additionalPropertiesSchemas/roomPasswordProperty"
              required:
              - name
              - password
              - capacity
        description: Rooms infos
  "/rooms/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: integer
    get:
      summary: show room
      tags:
      - Rooms
      description: Get room's info by id
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/room"
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    patch:
      summary: update room
      tags:
      - Rooms
      description: Get room's info by id
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/room"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/propertiesSchemas/roomProperties"
              - "$ref": "#/components/additionalPropertiesSchemas/roomPasswordProperty"
        description: Rooms infos
    put:
      summary: update room
      tags:
      - Rooms
      description: Get room's info by id
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/room"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/propertiesSchemas/roomProperties"
              - "$ref": "#/components/additionalPropertiesSchemas/roomPasswordProperty"
        description: Rooms infos
    delete:
      summary: delete room
      tags:
      - Rooms
      description: Delete room by id
      responses:
        '204':
          description: Deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/stats":
    get:
      summary: List stats
      tags:
      - Stats
      description: List all stats of a user
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/stat"
        '401':
          description: Unauthorized
  "/tasks/tags":
    get:
      summary: List tags
      tags:
      - Tasks tags
      description: List all tasks tags user has access to
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/tag"
        '401':
          description: Unauthorized
    post:
      summary: Create tag
      tags:
      - Tasks tags
      description: Create a tag for the tasks
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/tag"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/propertiesSchemas/tagProperties"
              required:
              - name
              - color
        description: Tag infos
  "/tasks/tags/global":
    post:
      summary: Create global tag
      tags:
      - Tasks tags
      description: Create a global tag for the tasks, needs appropriate permissions
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/tag"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/propertiesSchemas/tagProperties"
              required:
              - name
              - color
        description: Tag infos
  "/tasks/tags/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show tag
      tags:
      - Tasks tags
      description: Show a specifid tag infos
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/tag"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    patch:
      summary: Update tag
      tags:
      - Tasks tags
      description: Update a tag's infos
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/tag"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/tagProperties"
        description: Tag infos
    put:
      summary: Update tag
      tags:
      - Tasks tags
      description: Update a tag's infos
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/tag"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/tagProperties"
        description: Tag infos
    delete:
      summary: Delete tag
      tags:
      - Tasks tags
      description: Delete the tag with the provided id
      responses:
        '204':
          description: Deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  "/tasks":
    get:
      summary: list tasks
      tags:
      - Tasks
      description: List all tasks the user has access to
      parameters:
      - name: date
        in: query
        type: string
        description: Permit to ask for the tasks for a specific date
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/task"
        '401':
          description: Unauthorized
    post:
      summary: create task
      tags:
      - Tasks
      description: Creates a task with the provided infos
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/task"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/propertiesSchemas/taskProperties"
              required:
              - title
              - description
              - done
        description: Task infos
  "/tasks/{id}":
    parameters:
    - name: id
      in: path
      description: DB object id
      required: true
      schema:
        type: integer
    get:
      summary: show task
      tags:
      - Tasks
      description: Get the task with the provided id
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/task"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      summary: delete task
      tags:
      - Tasks
      description: Delete the task with the providede id
      responses:
        '204':
          description: Deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    patch:
      summary: update task
      tags:
      - Tasks
      description: Update the task with the providede id
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/task"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/taskProperties"
        description: Task infos
    put:
      summary: update task
      tags:
      - Tasks
      description: Update the task with the providede id
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/task"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/taskProperties"
        description: Task infos
  "/user":
    get:
      summary: User infos
      tags:
      - User
      description: Fetch the user's informations stored in the DB
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/user"
        '401':
          description: Unauthorized
    post:
      summary: User creation
      tags:
      - User
      description: Create a user in DB to sync with Auth0 user
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/user"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '409':
          description: User already exists
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - "$ref": "#/components/propertiesSchemas/userProperties"
              required:
              - username
        description: Create with user infos
    delete:
      summary: User deletion
      tags:
      - User
      description: Delete the user in DB to desync with Auth0 user
      responses:
        '204':
          description: Deleted
        '401':
          description: Unauthorized
    put:
      summary: User update
      tags:
      - User
      description: Update the user's infos in DB
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/user"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/userProperties"
        description: Update with user infos
    patch:
      summary: User update
      tags:
      - User
      description: Update the user's infos in DB
      parameters: []
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/user"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/propertiesSchemas/userProperties"
        description: Update with user infos
components:
  securitySchemes:
    BearerToken:
      description: Auth0 bearer token
      scheme: bearer
      type: apiKey
      name: Authorization
      in: header
  schemas:
    user:
      allOf:
      - "$ref": "#/components/idSchemas/withAuth0Id"
      - "$ref": "#/components/propertiesSchemas/userProperties"
      required:
      - auth0Id
      - username
    task:
      allOf:
      - "$ref": "#/components/idSchemas/withId"
      - "$ref": "#/components/propertiesSchemas/taskProperties"
      required:
      - id
      - title
      - description
      - done
      - start
      - end
    profile:
      allOf:
      - "$ref": "#/components/idSchemas/withId"
      - "$ref": "#/components/propertiesSchemas/profileProperties"
      required:
      - id
      - occupation
      - prod_period
      - start_work
      - end_work
      - start_sleep
      - end_sleep
    tag:
      allOf:
      - "$ref": "#/components/idSchemas/withId"
      - "$ref": "#/components/propertiesSchemas/tagProperties"
      - "$ref": "#/components/additionalPropertiesSchemas/tagGlobalProperty"
      required:
      - id
      - name
      - color
      - global
    accessory:
      allOf:
      - "$ref": "#/components/idSchemas/withId"
      - "$ref": "#/components/propertiesSchemas/accessoryProperties"
      required:
      - id
      - name
      - image_path
      - body_part
    companion:
      allOf:
      - "$ref": "#/components/idSchemas/withId"
      - "$ref": "#/components/propertiesSchemas/companionProperties"
      - "$ref": "#/components/additionalPropertiesSchemas/companionAccessoriesProperty"
      required:
      - id
      - name
      - skin_color
    stat:
      allOf:
      - "$ref": "#/components/idSchemas/withId"
      - "$ref": "#/components/propertiesSchemas/statProperties"
      required:
      - id
      - tasks_done
      - tasks_created
    room:
      allOf:
      - "$ref": "#/components/idSchemas/withId"
      - "$ref": "#/components/propertiesSchemas/roomProperties"
      - "$ref": "#/components/additionalPropertiesSchemas/roomNeedsPasswordProperty"
      required:
      - id
      - name
      - password
      - capacity
    achievement:
      allOf:
      - "$ref": "#/components/idSchemas/withId"
      - "$ref": "#/components/propertiesSchemas/achievementProperties"
      required:
      - id
      - name
      - description
      - criteria
      - image_path
  idSchemas:
    withAuth0Id:
      type: object
      properties:
        auth0Id:
          type: string
    withId:
      type: object
      properties:
        id:
          type: integer
  propertiesSchemas:
    userProperties:
      type: object
      properties:
        username:
          type: string
    taskProperties:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        done:
          type: boolean
        recurrence:
          anyOf:
          - type: array
            items:
              type: string
              enum:
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
          - type: string
            pattern: yearly
          nullable: true
        tags:
          type: array
          items:
            type: integer
        unmovable:
          type: boolean
        start:
          type: string
          format: date-time
          nullable: true
        end:
          type: string
          format: date-time
          nullable: true
    profileProperties:
      type: object
      properties:
        occupation:
          type: string
          enum:
          - school
          - college
          - work
          - free
        prod_period:
          type: string
          enum:
          - before
          - after
          - both
        start_work:
          type: string
          format: date-time
        end_work:
          type: string
          format: date-time
        start_sleep:
          type: string
          format: date-time
          nullable: true
        end_sleep:
          type: string
          format: date-time
          nullable: true
    tagProperties:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
          pattern: "#[A-Fa-f0-9]{6}"
    accessoryProperties:
      type: object
      properties:
        name:
          type: string
        image_path:
          type: string
          pattern: "(/[a-z0-9_])+"
        body_part:
          type: string
          enum:
          - hair
          - hands
          - face
          - neck
          - torso
          - legs
          - feet
          - mouth
          - eyes
    companionProperties:
      type: object
      properties:
        name:
          type: string
        skin_color:
          type: string
          pattern: "#[A-Za-z0-9]{6}"
    statProperties:
      type: object
      properties:
        tasks_done:
          type: integer
        tasks_created:
          type: integer
    roomProperties:
      type: object
      properties:
        name:
          type: string
        capacity:
          type: integer
    achievementProperties:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        criteria:
          type: string
        image_path:
          type: string
  additionalPropertiesSchemas:
    tagGlobalProperty:
      type: object
      properties:
        global:
          type: boolean
    roomPasswordProperty:
      type: object
      properties:
        password:
          type: string
          nullable: true
    roomNeedsPasswordProperty:
      type: object
      properties:
        needs_password:
          type: boolean
    companionAccessoriesProperty:
      type: object
      properties:
        accessories:
          type: array
          items:
            "$ref": "#/components/schemas/accessory"
security:
- BearerToken: []
servers:
- url: http://localhost:3000
- url: https://etuduo-backend.herokuapp.com/
